@inject NavigationManager _navigation

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">InventoryManagement</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
       @* <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" @onclick="(() => NavigateToCounter(1))">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>*@
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="invoice">
                <span class="oi oi-list-rich" aria-hidden="true"></span>Invoice 
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Branch">
                <span class="oi oi-plus" aria-hidden="true"></span> Branch
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    //protected override Task OnInitializedAsync()
    //{
    //    return base.OnInitializedAsync();
    //}

    //protected override Task OnParametersSetAsync()
    //{
    //    return base.OnParametersSetAsync();
    //}

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private void NavigateToCounter(int id){
        _navigation.NavigateTo("/counter");
    }
}
